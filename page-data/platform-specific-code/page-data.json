{
    "componentChunkName": "component---src-templates-lesson-template-js",
    "path": "/platform-specific-code",
    "result": {"data":{"markdownRemark":{"html":"<p>Although most of the time one codebase for two apps works like a charm, there can be times when you'll want to show something in a way on Android and in another on iOS. This usually happens when some native library is only available on one of the platforms, e.g. <a href=\"https://reactnative.dev/docs/datepickerios\">DatePickeriOS</a> or <a href=\"https://reactnative.dev/docs/drawerlayoutandroid\">DrawerLayoutAndroid</a>, or some minor updates like colors or fonts need to be consistent with the OS. You may have noticed that colors can look a bit duller on Android screens and sometimes you may want to adjust for that.</p>\n<h2 id=\"platform-option\" style=\"position:relative;\"><a href=\"#platform-option\" aria-label=\"platform option permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Platform option</h2>\n<p>Suppose you wanted to prompt the user to go to the App Store / Google Play Store for something. This is an example of something that would need to be displayed conditionally based on the platform. For this, you can use the <a href=\"https://reactnative.dev/docs/platform-specific-code#platform-module\">Platform module</a> built into React Native:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Platform <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> Platform<span class=\"token punctuation\">.</span><span class=\"token constant\">OS</span> <span class=\"token operator\">===</span> <span class=\"token string\">'ios'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'App Store'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Google Play Store'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The <code class=\"language-text\">Platform.OS</code> will be <code class=\"language-text\">android</code> or <code class=\"language-text\">iOS</code> depending on the platform.</p>\n<p>If you wanted to apply conditional <em>styles</em> based on the platform, you might want to use <code class=\"language-text\">Platform.select</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Platform<span class=\"token punctuation\">,</span> StyleSheet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> styles <span class=\"token operator\">=</span> StyleSheet<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">container</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">flex</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>Platform<span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">ios</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">android</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"platform-specific-extensions\" style=\"position:relative;\"><a href=\"#platform-specific-extensions\" aria-label=\"platform specific extensions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Platform specific extensions</h2>\n<p>Sometimes you might want to have a a whole component be custom to the platform. We usually avoid this when possible (since maintaining 2 versions of the same code is what we are trying to avoid with React Native!), but sometimes it is necessary and there is a very handy way to do this using <a href=\"https://reactnative.dev/docs/platform-specific-code#platform-specific-extensions\">file extensions</a>.</p>\n<p>Suppose you had to build a custom <code class=\"language-text\">AwesomeButton</code> component for Android and iOS. Then instead of one <code class=\"language-text\">AwesomeButton.js</code> file, you should have two and place them next to each other in the same directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">AwesomeButton.ios.js\nAwesomeButton.android.js</code></pre></div>\n<p>Now if from another file you import <code class=\"language-text\">AwesomeButton</code> as you would normally:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> AwesomeButton <span class=\"token keyword\">from</span> <span class=\"token string\">'./AwesomeButton'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Then React Native will autimatically import the <code class=\"language-text\">.android.js</code> one on Android and <code class=\"language-text\">.ios.js</code> one on iOS.</p>","frontmatter":{"path":"/platform-specific-code","title":"Platform Specific Code","order":31}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":0,"path":"/intro","title":"Welcome"}}},{"node":{"frontmatter":{"order":1,"path":"/react-native","title":"About React Native"}}},{"node":{"frontmatter":{"order":2,"path":"/the-expo-debate","title":"Should you use Expo or plain React Native?"}}},{"node":{"frontmatter":{"order":3,"path":"/setup-expo","title":"[Expo] Getting started with Expo"}}},{"node":{"frontmatter":{"order":4,"path":"/setup-rn","title":"[RN] Getting started with plain React Native"}}},{"node":{"frontmatter":{"order":5,"path":"/code-style","title":"Adding a linter"}}},{"node":{"frontmatter":{"order":6,"path":"/debugging","title":"Debugging"}}},{"node":{"frontmatter":{"order":7,"path":"/intro-to-react","title":"Basic React Native components"}}},{"node":{"frontmatter":{"order":8,"path":"/styling","title":"Styling"}}},{"node":{"frontmatter":{"order":9,"path":"/styling-exercise","title":"Styling Exercise üìù"}}},{"node":{"frontmatter":{"order":10,"path":"/styling-exercise-solution","title":"Styling Exercise Solution üëÄ"}}},{"node":{"frontmatter":{"order":11,"path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":12,"path":"/lists","title":"Lists"}}},{"node":{"frontmatter":{"order":13,"path":"/lists-exercise","title":"Lists Exercise üìù"}}},{"node":{"frontmatter":{"order":14,"path":"/lists-exercise-solution","title":"Lists Exercise Solution üëÄ"}}},{"node":{"frontmatter":{"order":15,"path":"/navigation-intro","title":"Navigation Intro"}}},{"node":{"frontmatter":{"order":16,"path":"/navigation-expo","title":"[Expo] Adding navigation with Expo"}}},{"node":{"frontmatter":{"order":17,"path":"/navigation-rn","title":"[RN] Adding navigation with plain React Native"}}},{"node":{"frontmatter":{"order":18,"path":"/adding-navigation","title":"Adding Navigation"}}},{"node":{"frontmatter":{"order":19,"path":"/navigation-exercise","title":"Navigation Exercise üìù"}}},{"node":{"frontmatter":{"order":20,"path":"/navigation-exercise-solution","title":"Navigation Exercise Solution üëÄ"}}},{"node":{"frontmatter":{"order":21,"path":"/react-hooks","title":"useState, useCallback, useEffect"}}},{"node":{"frontmatter":{"order":22,"path":"/network-requests-exercise","title":"Network Requests Exercise üìù"}}},{"node":{"frontmatter":{"order":23,"path":"/network-requests-exercise-solution","title":"Network Requests Exercise Solution üëÄ"}}},{"node":{"frontmatter":{"order":24,"path":"/pull-to-refresh","title":"Pull to refresh"}}},{"node":{"frontmatter":{"order":25,"path":"/forms","title":"Overview of Forms in React Native"}}},{"node":{"frontmatter":{"order":26,"path":"/modals","title":"Opening a full screen modal"}}},{"node":{"frontmatter":{"order":27,"path":"/forms-exercise","title":"Form exercise üìù"}}},{"node":{"frontmatter":{"order":28,"path":"/forms-exercise-solution","title":"Form exercise solution üëÄ"}}},{"node":{"frontmatter":{"order":29,"path":"/wrapping-up","title":"Wrapping up"}}},{"node":{"frontmatter":{"order":30,"path":"/ejecting-from-expo","title":"[Expo] Ejecting from Expo"}}},{"node":{"frontmatter":{"order":31,"path":"/platform-specific-code","title":"Platform Specific Code"}}},{"node":{"frontmatter":{"order":32,"path":"/security","title":"Security"}}}]}},"pageContext":{}},
    "staticQueryHashes": ["643629163"]}